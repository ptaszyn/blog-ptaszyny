{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./src/pages/index.tsx"],"names":["Bio","site","siteMetadata","author","social","style","display","marginBottom","rhythm","name","href","linkedin","github","BlogIndex","data","location","siteTitle","title","posts","allMarkdownRemark","edges","map","node","frontmatter","fields","slug","key","to","css","date","dangerouslySetInnerHTML","__html","description","excerpt","pageQuery"],"mappings":"2JAgDeA,IApCH,WACV,IADgB,EACN,OAgBsBC,KAAKC,aAA7BC,EAjBQ,EAiBRA,OAAQC,EAjBA,EAiBAA,OAChB,OACE,mBACEC,MAAO,CACLC,QAAQ,OACRC,aAAcC,YAAO,OAGvB,8CACwB,0BAASL,EAAOM,MADxC,8EAGE,iBAAGC,KAAI,4BAA8BN,EAAOO,UAA5C,YAHF,MAKS,iBAAGD,KAAI,sBAAwBN,EAAOQ,QAAtC,UALT,Q,kCCrCN,uI,+DA6EeC,UA5CG,SAAC,GAAwC,IAAtCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,SACnBC,EAAYF,EAAKb,KAAKC,aAAae,MACnCC,EAAQJ,EAAKK,kBAAkBC,MAErC,OACE,YAAC,IAAD,CAAQL,SAAUA,EAAUE,MAAOD,GACjC,YAAC,IAAD,CAAKC,MAAM,cACX,YAAC,IAAD,MACCC,EAAMG,KAAI,YAAc,IAAXC,EAAW,EAAXA,KACNL,EAAQK,EAAKC,YAAYN,OAASK,EAAKE,OAAOC,KACpD,OACE,uBAASC,IAAKJ,EAAKE,OAAOC,MACxB,YAAC,OAAD,CACEE,GAAIL,EAAKE,OAAOC,KAChBG,IAAG,GAKH,0BACE,kBACEvB,MAAO,CACLE,aAAcC,YAAO,EAAI,KAG1BS,GAEH,yBAAQK,EAAKC,YAAYM,OAE3B,2BACE,iBACEC,wBAAyB,CACvBC,OAAQT,EAAKC,YAAYS,aAAeV,EAAKW,mBAc1D,IAAMC,EAAY,a","file":"component---src-pages-index-tsx-224cff5e57fd322fee61.js","sourcesContent":["/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport { rhythm } from \"../utils/typography\"\r\n\r\nconst Bio = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query BioQuery {\r\n      site {\r\n        siteMetadata {\r\n          author {\r\n            name\r\n          }\r\n          social {\r\n            linkedin\r\n            github\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const { author, social } = data.site.siteMetadata\r\n  return (\r\n    <div\r\n      style={{\r\n        display: `flex`,\r\n        marginBottom: rhythm(2.5),\r\n      }}\r\n    >\r\n      <p>\r\n        Blog stara się tworzć <strong>{author.name}</strong> który to kręci się\r\n        na trzepaku w stolycy. W deszczowe dni szukaj go na{` `}\r\n        <a href={`https://www.linkedin.com/${social.linkedin}`}>\r\n          LinkedIn\r\n        </a> i <a href={`https://github.com/${social.github}`}>GitHub</a>.\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bio\r\n","// Gatsby supports TypeScript natively!\r\nimport React from \"react\"\r\nimport { PageProps, Link, graphql } from \"gatsby\"\r\nimport { css } from \"@emotion/core\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport { rhythm } from \"../utils/typography\"\r\n\r\ntype Data = {\r\n  site: {\r\n    siteMetadata: {\r\n      title: string\r\n    }\r\n  }\r\n  allMarkdownRemark: {\r\n    edges: {\r\n      node: {\r\n        excerpt: string\r\n        frontmatter: {\r\n          title: string\r\n          date: string\r\n          description: string\r\n        }\r\n        fields: {\r\n          slug: string\r\n        }\r\n      }\r\n    }[]\r\n  }\r\n}\r\n\r\nconst BlogIndex = ({ data, location }: PageProps<Data>) => {\r\n  const siteTitle = data.site.siteMetadata.title\r\n  const posts = data.allMarkdownRemark.edges\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <SEO title=\"All posts\" />\r\n      <Bio />\r\n      {posts.map(({ node }) => {\r\n        const title = node.frontmatter.title || node.fields.slug\r\n        return (\r\n          <article key={node.fields.slug}>\r\n            <Link\r\n              to={node.fields.slug}\r\n              css={css`\r\n                text-decoration: none;\r\n                color: inherit;\r\n              `}\r\n            >\r\n              <header>\r\n                <h3\r\n                  style={{\r\n                    marginBottom: rhythm(1 / 4),\r\n                  }}\r\n                >\r\n                  {title}\r\n                </h3>\r\n                <small>{node.frontmatter.date}</small>\r\n              </header>\r\n              <section>\r\n                <p\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: node.frontmatter.description || node.excerpt,\r\n                  }}\r\n                />\r\n              </section>\r\n            </Link>\r\n          </article>\r\n        )\r\n      })}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogIndex\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n            description\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}